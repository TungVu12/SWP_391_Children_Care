@using ASP_NET_MVC_Ver1.Areas.Identity.Data;
@using ASP_NET_MVC_Ver1.Common;
@using ASP_NET_MVC_Ver1.Enum;
@using Microsoft.AspNetCore.Identity;
@model Reservation
@{
    string minDate = DateTime.Now.ToString("yyyy-MM-dd");
}
<style>
    body {
        background-color: #f7f7f7;
        font-family: Arial, sans-serif;
    }

    .container-a {
        margin-top: 50px;
        background-color: #fff;
        padding: 30px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0,0,0,0.3);
    }

    .form-group label {
        font-weight: bold;
    }

    .form-control:focus {
        box-shadow: none;
        border-color: #007bff;
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

        .btn-primary:hover {
            background-color: #0069d9;
            border-color: #0062cc;
        }
</style>
<div class="container-a">
    <div class="row pb-2">
        <h2>Add Reservation</h2>
    </div>

    <form method="post">
        <div asp-validation-summary="All"></div>

        <div class="row">
            @*danh sách bác sĩ*@
            @if (ViewBag.Admin || @ViewBag.Parent)
            {
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.doctor_id, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.DropDownListFor(model => model.doctor_id, new SelectList(ViewBag.doctor_lst, "Text", "Value"),
                "Chọn Bác sĩ",
                htmlAttributes: new { @id = "DoctorSelected", @class = "form-control col-md-2" , @onchange = "callAPIBooking(this.value)" })
                </div>
            }
            else if (ViewBag.Doctor)
            {
                <div class="form-group  col-md-6">
                    @Html.LabelFor(model => model.doctor_id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <input type="text" class="form-control mb-3" asp-for="doctor_id" readonly="true" value=@ViewBag.doctorName>
                    <input type="text" id="DoctorSelected" value="@ViewBag.doctorId" hidden>
                </div>
            }
            @*danh sách bố mẹ*@
            @if (@ViewBag.Admin || @ViewBag.Doctor)
            {
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.parent_id, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.DropDownListFor(model => model.parent_id, new SelectList(ViewBag.parent_lst, "Text", "Value"),"Chọn Phụ huynh", htmlAttributes: new { @id = "profileCountry", @class = "form-control col-md-2" , @onchange = "FillState(this.value)" })
                </div>
            }
            else if (@ViewBag.Parent)
            {
                <div class="form-group  col-md-6">
                    @Html.LabelFor(model => model.parent_id, htmlAttributes: new { @class = "control-label col-md-2" })

                    <input type="text" class="form-control mb-3" asp-for="parent_id" readonly="true" value=@ViewBag.parentName>
                </div>
            }

            @*danh sách bé theo phụ huynh*@
            @if (@ViewBag.Admin || @ViewBag.Doctor)
            {
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.child_id, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.DropDownListFor(model => model.child_id, new SelectList(Enumerable.Empty<SelectListItem>(), "Text", "Value"),
                //"Chọn bé",
                htmlAttributes: new { @id = "profileState", @class = "form-control col-md-2" })
                </div>
            }
            else if (@ViewBag.Parent)
            {
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.child_id, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.DropDownListFor(model => model.child_id, new SelectList(ViewBag.child_lst, "Text", "Value"),
                "Chọn trẻ em",
                htmlAttributes: new { @id = "profileCountry", @class = "form-control col-md-2" })
                    @*@Html.DropDownListFor(x => x.child_id, new SelectList(ViewBag.child_lst, "Text", "Value"), new { htmlAttributes = new { @class = "form-control", @disabled = true, @readonly = "readonly"} })*@
                </div>
            }
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownListFor(model => model.category, new SelectList(ViewBag.category_lst, "Text", "Value"),
                "Chọn khoa",
                htmlAttributes: new { @id = "profileCountry", @class = "form-control col-md-2" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.r_title, htmlAttributes: new { @class = "control-label col-md-4" })
                <input type="text" class="form-control mb-3" asp-for="r_title" placeholder="Nhập bệnh cần khám">
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.r_content, htmlAttributes: new { @class = "control-label col-md-4" })
                <input type="text" class="form-control mb-3" asp-for="r_content" placeholder="Nội dung chẩn đoán">
                <span asp-validation-for="r_content" class=" alert-danger"></span>
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.booking_date, htmlAttributes: new { @class = "control-label col-md-2" })
                <input type="date" class="form-control datepicker" asp-for="booking_date" id="birthDateInput" min="@minDate" asp-format="{0:yyyy-MM-dd}">
                <span asp-validation-for="booking_date" class=" alert-danger"></span>
            </div>
            @if (@ViewBag.Admin || @ViewBag.Doctor)
            {
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.slot, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.DropDownListFor(model => model.slot, new SelectList(Enumerable.Empty<SelectListItem>(), "Text", "Value"),

                htmlAttributes: new { @id = "SlotFilter", @class = "form-control col-md-2"})
                </div>
            }
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Desciption, htmlAttributes: new { @class = "control-label col-md-2" })
                <input type="text" class="form-control mb-3" asp-for="Desciption" placeholder="Thông tin thêm">
                <span asp-validation-for="Desciption" class=" alert-danger"></span>
            </div>
            @if (@ViewBag.Admin || ViewBag.Doctor)
            {
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-4" })
                    @Html.DropDownListFor(x => x.status, new SelectList(Enum.GetValues(typeof(StatusSending)).Cast<StatusSending>().Select(e => new { Id = e, Name = e.GetDisplayName() }), "Id", "Name"), htmlAttributes: new { @class = "form-control col-md-2"})
                </div>
            }
            else
            {
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-4" })
                    @Html.DropDownListFor(x => x.status, new SelectList(Enum.GetValues(typeof(StatusSending)).Cast<StatusSending>().Select(e => new { Id = e, Name = e.GetDisplayName() }), "Id", "Name"), htmlAttributes: new { @class = "form-control col-md-2", @disabled = true, @readonly = "readonly"} )
                </div>
            }
        </div>
        <div class="text-center">
            <button type="submit" class="btn btn-lg btn-outline-primary px-4 py-2 mx-2"><i class="bi bi-save"></i> Send Booking</button>
            <a asp-controller="Reservation" asp-action="Index" class="btn btn-lg btn-outline-warning px-4 py-2">Back</a>
        </div>
    </form>

</div>


@*//for front end validations*@
<script>
    function FillState(val) {
        var url = "/api/GetData/GetChildren?parentId=" + val;
        var countryParam = $('#profileCountry').val();
        $.ajax({
            url: url,
            type: "GET",
            dataType: "JSON",
            data: { country: countryParam },
            success: function (states) {
                $("#profileState").html(""); // clear before appending new list
                $.each(states, function (i, statetest) {
                    $("#profileState").append(
                        $('<option></option>').val(statetest.text).html(statetest.value));
                });
            }
        });
    }
    document.getElementById("birthDateInput").addEventListener("change", function () {
        // Gọi hàm xử lý khi có sự thay đổi giá trị
        callAPIBooking();
    });
    function callAPIBooking(val) {
        var birthDate = document.getElementById("birthDateInput").value;
        var doctorId = $('#DoctorSelected').val();
        var url = "/api/GetData/callAPIBooking?bookingDate=" + birthDate + "&idDoctor=" + doctorId;
        // Gọi API bằng Ajax
        $.ajax({
            url: url,
            type: "GET",
            dataType: "json",
            //data: { country: countryParam },
            success: function (response) {
                $("#SlotFilter").html(""); //
                $.each(response, function (i, statetest) {
                    $("#SlotFilter").append(
                        $('<option></option>').val(statetest.text).html(statetest.value));
                });

                // Xử lý dữ liệu trả về từ API
                // Ví dụ: gán giá trị cho các trường khác trên trang
            },
            error: function (xhr, status, error) {
                // Xử lý lỗi khi gọi API
                console.log(error);
            }
        });
    }
</script>
@section Scripts{
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}
