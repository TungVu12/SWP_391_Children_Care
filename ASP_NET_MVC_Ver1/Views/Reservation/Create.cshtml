@using ASP_NET_MVC_Ver1.Areas.Identity.Data;
@using ASP_NET_MVC_Ver1.Common;
@using ASP_NET_MVC_Ver1.Enum;
@using Microsoft.AspNetCore.Identity;
@model Reservation
@{
    string minDate = DateTime.Now.ToString("yyyy-MM-dd");
}
@if (TempData["ResultOk"] != null)
{
    <h1 class="alert-success">@TempData["ResultOk"]</h1>
}
<div class="container shadow p-5">
    <div class="row pb-2">
        <h2>Đặt lịch hẹn khám</h2>
    </div>

    <form method="post">
        <div asp-validation-summary="All"></div>

        <div class="form-row">
            @*danh sách bác sĩ*@
            @if (ViewBag.Admin || @ViewBag.Parent)
            {
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.doctor_id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.doctor_id, new SelectList(ViewBag.doctor_lst, "Text", "Value"),
                    "Chọn Bác sĩ",
                    htmlAttributes: new { @id = "DoctorSelected", @class = "form-control col-md-2" , @onchange = "callAPIBooking(this.value)" })
                    </div>
                </div>
            }
            else if (ViewBag.Doctor)
            {
                <div class="form-group  col-md-6">
                    @Html.LabelFor(model => model.doctor_id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="text" class="form-control mb-3" asp-for="doctor_id" readonly="true" value=@ViewBag.doctorName>
                        <input type="text" id="DoctorSelected" value="@ViewBag.doctorId" hidden>
                    </div>
                </div>
            }
            @*danh sách bố mẹ*@
            @if (@ViewBag.Admin || @ViewBag.Doctor)
            {
                <div class="form-group  col-md-6">
                    @Html.LabelFor(model => model.parent_id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.parent_id, new SelectList(ViewBag.parent_lst, "Text", "Value"),"Chọn Phụ huynh", htmlAttributes: new { @id = "profileCountry", @class = "form-control col-md-2" , @onchange = "FillState(this.value)" })
                    </div>
                </div>
            }
            else if (@ViewBag.Parent)
            {
                <div class="form-group  col-md-6">
                    @Html.LabelFor(model => model.parent_id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="text" class="form-control mb-3" asp-for="parent_id" readonly="true" value=@ViewBag.parentName>
                    </div>
                </div>
            }

            @*danh sách bé theo phụ huynh*@
            @if (@ViewBag.Admin || @ViewBag.Doctor)
            {
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.child_id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.child_id, new SelectList(Enumerable.Empty<SelectListItem>(), "Text", "Value"),
                    //"Chọn bé",
                    htmlAttributes: new { @id = "profileState", @class = "form-control col-md-2" })
                    </div>
                </div>
            }
            else if (@ViewBag.Parent)
            {
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.child_id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.child_id, new SelectList(ViewBag.child_lst, "Text", "Value"),
                    "Chọn trẻ em",
                    htmlAttributes: new { @id = "profileCountry", @class = "form-control col-md-2" })
                        @*@Html.DropDownListFor(x => x.child_id, new SelectList(ViewBag.child_lst, "Text", "Value"), new { htmlAttributes = new { @class = "form-control", @disabled = true, @readonly = "readonly"} })*@
                    </div>

                </div>
            }
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.category, new SelectList(ViewBag.category_lst, "Text", "Value"),
                    "Chọn khoa",
                    htmlAttributes: new { @id = "profileCountry", @class = "form-control col-md-2" })
                </div>
            </div>

            <div class="form-group col-md-6">
                <label asp-for="r_title">Bệnh cần khám</label>
                <input type="text" class="form-control mb-3" asp-for="r_title" placeholder="Nhập bệnh cần khám">
            </div>
            <div class="form-group col-md-6">
                <label asp-for="r_content">Nội dung chẩn đoán</label>
                <input type="text" class="form-control mb-3" asp-for="r_content" placeholder="Nội dung chẩn đoán">
                <span asp-validation-for="r_content" class=" alert-danger"></span>
            </div>
            @Html.LabelFor(model => model.booking_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="form-group col-md-6 mb-3">
                <input type="date" class="form-control datepicker" asp-for="booking_date" id="birthDateInput" min="@minDate" asp-format="{0:yyyy-MM-dd}">
                <span asp-validation-for="booking_date" class=" alert-danger"></span>
            </div>
            @if (@ViewBag.Admin || @ViewBag.Doctor)
            {
                @Html.LabelFor(model => model.slot, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-group col-md-6">
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.slot, new SelectList(Enumerable.Empty<SelectListItem>(), "Text", "Value"),
                    //@Html.DropDownListFor(model => model.slot, new SelectList(ViewBag.lstSlot, "Text", "Value"),
                    //"Chọn Ca khám",
                    htmlAttributes: new { @id = "SlotFilter", @class = "form-control col-md-2"})
                    </div>
                </div>
            }
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Desciption, htmlAttributes: new { @class = "control-label col-md-2" })
                <input type="text" class="form-control mb-3" asp-for="Desciption" placeholder="Thông tin thêm">
                <span asp-validation-for="Desciption" class=" alert-danger"></span>
            </div>

            @if (@ViewBag.Admin || ViewBag.Doctor)
            {
                @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-group col-md-6">
                    <div class="col-md-10">
                        @Html.DropDownListFor(x => x.status, new SelectList(Enum.GetValues(typeof(StatusSending)).Cast<StatusSending>().Select(e => new { Id = e, Name = e.GetDisplayName() }), "Id", "Name"), htmlAttributes: new { @class = "form-control col-md-2"})
                    </div>
                </div>
            }
            else
            {
                <div class="form-group col-md-8">
                    @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(x => x.status, new SelectList(Enum.GetValues(typeof(StatusSending)).Cast<StatusSending>().Select(e => new { Id = e, Name = e.GetDisplayName() }), "Id", "Name"), htmlAttributes: new { @class = "form-control col-md-2", @disabled = true, @readonly = "readonly"} )
                    </div>
                </div>
            }

        </div>

        <button type="submit" class="btn btn-lg btn-primary p-2"><i class="bi bi-file-plus-fill">Gửi yêu cầu</i></button>
        <a asp-controller="Reservation" asp-action="Index" class="btn btn-lg btn-warning p-2">Trở lại</a>

    </form>

</div>


@*//for front end validations*@
<script>
    function FillState(val) {
        var url = "/api/GetData/GetChildren?parentId=" + val;
        var countryParam = $('#profileCountry').val();
        $.ajax({
            url: url,
            type: "GET",
            dataType: "JSON",
            data: { country: countryParam },
            success: function (states) {
                $("#profileState").html(""); // clear before appending new list
                $.each(states, function (i, statetest) {
                    $("#profileState").append(
                        $('<option></option>').val(statetest.text).html(statetest.value));
                });
            }
        });
    }
    document.getElementById("birthDateInput").addEventListener("change", function () {
        // Gọi hàm xử lý khi có sự thay đổi giá trị
        callAPIBooking();
    });
    function callAPIBooking(val) {
        var birthDate = document.getElementById("birthDateInput").value;
        var doctorId = $('#DoctorSelected').val();
        var url = "/api/GetData/callAPIBooking?bookingDate=" + birthDate + "&idDoctor=" + doctorId;
        // Gọi API bằng Ajax
        $.ajax({
            url: url,
            type: "GET",
            dataType: "json",
            //data: { country: countryParam },
            success: function (response) {
                $("#SlotFilter").html(""); //
                $.each(response, function (i, statetest) {
                    $("#SlotFilter").append(
                        $('<option></option>').val(statetest.text).html(statetest.value));
                });

                // Xử lý dữ liệu trả về từ API
                // Ví dụ: gán giá trị cho các trường khác trên trang
            },
            error: function (xhr, status, error) {
                // Xử lý lỗi khi gọi API
                console.log(error);
            }
        });
    }
</script>
@section Scripts{
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}
